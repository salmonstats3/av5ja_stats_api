name: Semantic Versioning

on:
  pull_request:
    branches:
      - '**'
      - 'develop'

jobs:
  # version_check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check Labels
  #       if: |
  #         !contains(github.event.pull_request.labels.*.name, 'release:patch') &&
  #         !contains(github.event.pull_request.labels.*.name, 'release:minor') &&
  #         !contains(github.event.pull_request.labels.*.name, 'release:major')
  #       run: |
  #         echo "::error::No labels found labels: `release:patch`, `release:minor`, `release:major`"
  #         exit 1

  # version_diff:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     chagned: ${{ steps.version_diff.outputs.changed }}
  #   steps:
  #     - name: Fetch Target Branch
  #       run: |
  #         git fetch origin ${{ github.base_ref }} --depth=1

  #     - name: Save Version
  #       id: version_diff
  #       run: |
  #         echo "changed=$(git diff origin/${{ github.base_ref }} HEAD --relative "./package.json" | grep "^+.\+version" | wc -l)" >> $GITHUB_OUTPUT

  # version_update:
  #   runs-on: ubuntu-latest
  #   needs: [version_diff]
  #   if: needs.version_diff.outputs.chagned == '0'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.pull_request.head.ref }}

  #     - name: Git Config
  #       if: steps.diff.outputs.changed == '0'
  #       run: |
  #         git config --global user.name 'github-actions[bot]'
  #         git config --global user.email 'github-actions[bot]@users.noreply.github.com'
  #         git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Update Version(Patch)
  #       if: contains(github.event.pull_request.labels.*.name, 'release:patch')
  #       run: pnpm version --patch --no-git-tag-version

  #     - name: Update Version(Minor)
  #       if: contains(github.event.pull_request.labels.*.name, 'release:minor')
  #       run: pnpm version --minor --no-git-tag-version

  #     - name: Update Version(Major)
  #       if: contains(github.event.pull_request.labels.*.name, 'release:major')
  #       run: pnpm version --major --no-git-tag-version

  #     - name: Push Changes
  #       run: |
  #         git add .
  #         git commit -m "v$(grep version package.json | awk -F \" '{print $4}')"
  #         git push origin HEAD

  version:
    if: github.base_ref == 'master'
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Current Version
        id: current_version
        uses: ./.github/workflows/actions/package-version
        with:
          ref: ${{ github.base_ref }}

      - name: Get Release Version
        id: release_version
        uses: ./.github/workflows/actions/package-version
        with:
          branch: ${{ github.ref }}

      - name: Check version update
        id: check-version-update
        uses: ./.github/workflows/actions/check-version-update
        with:
          current_version: ${{ steps.current_version.outputs.version }}
          release_version: ${{ steps.release_version.outputs.version }}

      - name: Set Label to Pull Request
        if: github.event_name == 'pull_request'
        uses: ./.github/workflows/actions/set-label
        with:
          semver: ${{ steps.check-version-update.outputs.semver }}
